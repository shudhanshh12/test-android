{
  "formatVersion": 1,
  "database": {
    "version": 13,
    "identityHash": "7163ff2b47941ddf38cbc5d2307ee193",
    "entities": [
      {
        "tableName": "Merchant",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `name` TEXT, `mobile` TEXT, `createdAt` INTEGER, `profileImage` TEXT, `address` TEXT, `addressLatitude` REAL, `addressLongitude` REAL, `about` TEXT, `email` TEXT, `contactName` TEXT, `upiVpa` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mobile",
            "columnName": "mobile",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "profileImage",
            "columnName": "profileImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "addressLatitude",
            "columnName": "addressLatitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "addressLongitude",
            "columnName": "addressLongitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "about",
            "columnName": "about",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contactName",
            "columnName": "contactName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "upiVpa",
            "columnName": "upiVpa",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Customer",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `status` INTEGER NOT NULL, `mobile` TEXT, `description` TEXT, `createdAt` INTEGER, `balance` REAL NOT NULL, `balanceV2` INTEGER NOT NULL, `transactionCount` INTEGER NOT NULL, `lastActivity` INTEGER, `lastPayment` INTEGER, `accountUrl` TEXT, `profileImage` TEXT, `address` TEXT, `email` TEXT, `lastBillDate` INTEGER, `newActivityCount` INTEGER NOT NULL, `lastViewTime` INTEGER, `registered` INTEGER NOT NULL, `txnAlertEnabled` INTEGER NOT NULL, `lang` TEXT, `reminderMode` TEXT, `dueReminderEnabled` INTEGER NOT NULL, `dueCreditPeriod` INTEGER NOT NULL, `customDueReminderSet` INTEGER NOT NULL, `customCreditCycleSet` INTEGER NOT NULL, `txnStartTime` INTEGER, `isLiveSales` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mobile",
            "columnName": "mobile",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "balance",
            "columnName": "balance",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "balanceV2",
            "columnName": "balanceV2",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "transactionCount",
            "columnName": "transactionCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastActivity",
            "columnName": "lastActivity",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastPayment",
            "columnName": "lastPayment",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "accountUrl",
            "columnName": "accountUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "profileImage",
            "columnName": "profileImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastBillDate",
            "columnName": "lastBillDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "newActivityCount",
            "columnName": "newActivityCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastViewTime",
            "columnName": "lastViewTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "registered",
            "columnName": "registered",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "txnAlertEnabled",
            "columnName": "txnAlertEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lang",
            "columnName": "lang",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "reminderMode",
            "columnName": "reminderMode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "dueReminderEnabled",
            "columnName": "dueReminderEnabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dueCreditPeriod",
            "columnName": "dueCreditPeriod",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customDueReminderSet",
            "columnName": "customDueReminderSet",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customCreditCycleSet",
            "columnName": "customCreditCycleSet",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "txnStartTime",
            "columnName": "txnStartTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isLiveSales",
            "columnName": "isLiveSales",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Transaction",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `type` INTEGER NOT NULL, `customerId` TEXT, `collectionId` TEXT, `amount` REAL NOT NULL, `amountV2` INTEGER NOT NULL, `receiptUrl` TEXT, `note` TEXT, `createdAt` INTEGER, `isOnboarding` INTEGER NOT NULL, `isDeleted` INTEGER NOT NULL, `deleteTime` INTEGER, `isDirty` INTEGER NOT NULL, `billDate` INTEGER, `updatedAt` INTEGER, `smsSent` INTEGER NOT NULL, `createdByCustomer` INTEGER NOT NULL, `deletedByCustomer` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customerId",
            "columnName": "customerId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "collectionId",
            "columnName": "collectionId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "amountV2",
            "columnName": "amountV2",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "receiptUrl",
            "columnName": "receiptUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "note",
            "columnName": "note",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isOnboarding",
            "columnName": "isOnboarding",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDeleted",
            "columnName": "isDeleted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deleteTime",
            "columnName": "deleteTime",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isDirty",
            "columnName": "isDirty",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "billDate",
            "columnName": "billDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "smsSent",
            "columnName": "smsSent",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdByCustomer",
            "columnName": "createdByCustomer",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deletedByCustomer",
            "columnName": "deletedByCustomer",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DueDate",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `due_at` INTEGER NOT NULL, `amount` INTEGER NOT NULL, `invalidation_reason` INTEGER NOT NULL, `status` INTEGER NOT NULL, `dueReminderSent` INTEGER NOT NULL, `updatedAt` INTEGER, `isCustomDate` INTEGER NOT NULL, `customerId` TEXT NOT NULL, PRIMARY KEY(`customerId`, `due_at`, `status`, `dueReminderSent`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "due_at",
            "columnName": "due_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "invalidation_reason",
            "columnName": "invalidation_reason",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dueReminderSent",
            "columnName": "dueReminderSent",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isCustomDate",
            "columnName": "isCustomDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customerId",
            "columnName": "customerId",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "customerId",
            "due_at",
            "status",
            "dueReminderSent"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DueInfo",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`customerId` TEXT NOT NULL, `is_due_active` INTEGER NOT NULL, `active_date` INTEGER, `is_custom_date_set` INTEGER NOT NULL, PRIMARY KEY(`customerId`))",
        "fields": [
          {
            "fieldPath": "customerId",
            "columnName": "customerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "is_due_active",
            "columnName": "is_due_active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "active_date",
            "columnName": "active_date",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "is_custom_date_set",
            "columnName": "is_custom_date_set",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "customerId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [
      {
        "viewName": "CustomerWithTransactionsInfo",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT\n            Customer.id,\n            Customer.status,\n            Customer.mobile,\n            Customer.description,\n            Customer.createdAt,\n            0 as balance,\n            SUM(CASE WHEN `Transaction`.isDeleted == 1 THEN 0 WHEN `Transaction`.type == 1 THEN -1 * `Transaction`.amountV2 ELSE `Transaction`.amountV2 END) as balanceV2,\n            SUM(CASE WHEN `Transaction`.isDeleted == 1 THEN 0 ELSE 1 END) as transactionCount,\n            MAX(CASE WHEN `Transaction`.isDeleted == 1 THEN 0 ELSE `Transaction`.createdAt END) as lastActivity,\n            MAX(CASE WHEN `Transaction`.isDeleted == 1 THEN 0 WHEN `Transaction`.type == 1 THEN 0 ELSE `Transaction`.createdAt END) as lastPayment,\n            Customer.accountUrl,\n            Customer.profileImage,\n            Customer.address,\n            Customer.email,\n            MAX(`Transaction`.billDate ) as lastBillDate,\n            SUM(CASE WHEN Customer.lastViewTime == 0 THEN 0 WHEN `Transaction`.updatedAt > Customer.lastViewTime AND `Transaction`.createdByCustomer == 1 AND `Transaction`.isDeleted == 0  THEN 1 ELSE 0 END) as newActivityCount,\n            Customer.lastViewTime,\n            Customer.registered,\n            Customer.txnAlertEnabled,\n            Customer.lang,\n            Customer.reminderMode,\n            Customer.txnStartTime,\n            Customer.isLiveSales,\n            DueInfo.is_due_active,\n            DueInfo.active_date,\n            DueInfo.is_custom_date_set\n        FROM Customer\n        LEFT OUTER JOIN `Transaction` ON Customer.id = `Transaction`.customerId\n        LEFT JOIN `DueInfo` ON Customer.id = `DueInfo`.customerId\n        GROUP BY Customer.id"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '7163ff2b47941ddf38cbc5d2307ee193')"
    ]
  }
}