apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"
apply plugin: "androidx.navigation.safeargs"
apply from: "$rootDir/config.gradle"

android {
    flavorDimensions "server"
    productFlavors {

        staging {
            getIsDefault().set(true)
            dimension "server"
            buildConfigField "String", 'ZENDESK_ACCOUNT_KEY', "\"9HZ4WrbXh5IfpUykRhavL5FpeIuhbK6Y\""
            buildConfigField "String", 'ZENDESK_APP_ID', "\"193443988381343745\""
        }

        alpha {
            dimension "server"
            buildConfigField "String", 'ZENDESK_ACCOUNT_KEY', "\"9HZ4WrbXh5IfpUykRhavL5FpeIuhbK6Y\""
            buildConfigField "String", 'ZENDESK_APP_ID', "\"193443988381343745\""
        }

        prod {
            dimension "server"
            buildConfigField "String", 'ZENDESK_ACCOUNT_KEY', "\"9HZ4WrbXh5IfpUykRhavL5FpeIuhbK6Y\""
            buildConfigField "String", 'ZENDESK_APP_ID', "\"193443988381343745\""
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            testCoverageEnabled project.hasProperty('coverage')
        }
        qa {
            debuggable true
            minifyEnabled true
            consumerProguardFiles 'consumer-rules.pro'
        }

        release {
            debuggable false
            minifyEnabled true
            consumerProguardFiles 'consumer-rules.pro'
        }
    }

}

dependencies {

    implementation project(':business:contract')
    implementation project(':base')
    implementation project(':ab')
    implementation project(':shared')
    implementation project(':device')
    implementation project(':analytics')
    implementation project(':app:app_contract')
    implementation project(':supplier:contract')
    implementation project(':resources')
    implementation project(':fileupload')
    implementation project(':feature_help:sdk')
    implementation project(':backend:contract')
    implementation project(':communication')
    implementation project(':feature_help:contract')
    implementation project(':individual:contract')

    implementation navigation.fragment
    implementation navigation.fragmentKtx
    implementation navigation.ui
    implementation arch.lifecycle
    implementation arch.lifecycleKtx

    // Views
    implementation view.epoxy
    kapt view.epoxyProcessor
    annotationProcessor view.epoxyProcessor
    implementation view.youtubePlayer
    implementation view.lottie

    // Image
    implementation imageDeps.belvedereImagePicker
    implementation imageDeps.photoView
    implementation imageDeps.glide
    kapt imageDeps.glideCompiler
    implementation imageDeps.textDrawable

    //androidX
    implementation androidX.ktx
    implementation androidX.constraintLayout

    //coroutines
    implementation utility.coroutines
    implementation utility.coroutinesRx2

    // Dagger
    implementation dagger.core
    kapt dagger.annotationProcessor
    implementation dagger.android
    implementation dagger.supportLibrary
    kapt dagger.androidAnnotationProcessor
    implementation dagger.inject

    //Rx
    implementation rx.binding
    implementation rx.rxRelay

    // kotlin
    implementation utility.kotlin

    //zendesk
    implementation zendesk.chat
    implementation zendesk.messaging

    // Utility
    implementation utility.jodaTime

    // Unit testing
    testImplementation unitTest.jUnit
    testImplementation unitTest.truth
    testImplementation unitTest.mockitoKotlin
    testImplementation unitTest.mockk
    testImplementation unitTest.mockitoCore
    testImplementation unitTest.mockitoInline

    implementation firebase.firebaseMessaging
}
