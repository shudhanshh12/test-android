apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply from: "$rootDir/config.gradle"

android {
    flavorDimensions "server"
    productFlavors {

        staging {
            getIsDefault().set(true)
            dimension "server"
            buildConfigField "String", 'BASE_URL', "\"https://api.staging.okcredit.in/v1.0/\""
        }

        alpha {
            dimension "server"
            buildConfigField "String", 'BASE_URL', "\"https://api.alpha.okcredit.in/v1.0/\""
        }

        prod {
            dimension "server"
            buildConfigField "String", 'BASE_URL', "\"https://api.okcredit.in/v1.0/\""
        }
    }

    buildTypes {

        debug{
            debuggable true
            minifyEnabled false
            testCoverageEnabled project.hasProperty('coverage')
        }

        qa {
            debuggable true
            minifyEnabled true
            consumerProguardFiles 'consumer-rules-help-sdk.pro'
        }

        release {
            debuggable false
            minifyEnabled true
            consumerProguardFiles 'consumer-rules-help-sdk.pro'
        }
    }

}

dependencies {
    // base
    implementation project(':base')
    implementation project(':analytics')
    implementation project(':auth')
    implementation project(':app:app_contract')
    implementation project(':feature_help:contract')
    implementation project(':business:contract')

    // rxpreferences
    implementation rx.rxPreferences
    implementation utility.guava

    // dagger
    implementation dagger.core
    kapt dagger.androidAnnotationProcessor
    kapt dagger.annotationProcessor

    // retrofit
    implementation retrofit.retrofit
    implementation retrofit.gsonConverter
    implementation retrofit.retrofitRxAdapter

    // androidx
    implementation androidX.annotation

    // kotlin
    implementation utility.kotlin

    testImplementation unitTest.jUnit
    testImplementation unitTest.truth
    testImplementation unitTest.mockitoKotlin
    testImplementation unitTest.mockk
}
